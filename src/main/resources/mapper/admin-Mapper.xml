<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 모든 SQL문을 mapper태그 안에 작성 -->
<mapper namespace="adminMapper">
	<resultMap type="com.kh.project.admin.vo.CategoryVO" id="category">
		<id column="CATE_CODE" property="cateCode"/>
		<result column="CATE_NAME" property="cateName"/>
	</resultMap>
	<resultMap type="com.kh.project.item.vo.ItemVO" id="item">
		<id column="ITEM_CODE"			property="itemCode"/>
		<result column="ITEM_NAME"		property="itemName"/>
		<result column="ITEM_PRICE"		property="itemPrice"/>
		<result column="ITEM_INTRO"		property="itemIntro"/>
		<result column="ITEM_STOCK"		property="itemStock"/>
		<result column="ITEM_STATUS"	property="itemStatus"/>
		<result column="CATE_CODE"		property="cateCode"/>
		<collection property="imgList"	resultMap="img"></collection>
	</resultMap>
	
	<resultMap type="com.kh.project.admin.vo.SalesManageVO" id="view">
		<result column="ITEM_CODE" 		property="itemCode"/>
		<result column="ITEM_NAME" 		property="itemName"/>
		<result column="TOTAL_PRICE" 	property="totalPrice"/>
		<result column="CATE_CODE" 		property="cateCode"/>
		<result column="BUY_DATE" 		property="buyDate"/>
		<result column="BUY_CNT" 		property="buyCnt"/>
	</resultMap>
	<!-- 이미지 -->	
	<resultMap type="com.kh.project.item.vo.ImgVO" id="img">
		<id column="IMG_CODE"				property="imgCode"/>
		<result column="ORIGIN_IMG_NAME"	property="originImgName"/>
		<result column="ATTACHED_IMG_NAME"	property="attachedImgName"/>
		<result column="ITEM_CODE"			property="itemCode"/>
		<result column="IS_MAIN"			property="isMain"/>
	</resultMap>

	<resultMap type="com.kh.project.admin.vo.OrderInfoVO" id="order">
		<id column="BUY_CODE"				property="buyCode"/>
		<result column="ITEM_CODE"			property="itemCode"/>
		<result column="ID"					property="id"/>
		<result column="TOTAL_PRICE"		property="totalPrice"/>
		<result column="BUY_DATE"			property="buyDate"/>
		<result column="BUY_CNT"			property="buyCnt"/>
		<result column="ITEM_NAME"			property="itemName"/>
		<result column="PAYMENT_PLAN"		property="paymentPlan"/>
		<result column="BUY_STATUS"			property="buyStatus"/>
		<result column="ROAD_ADDR"			property="roadAddr"/>
		<result column="DETAIL_ADDR"		property="detailAddr"/>
		<result column="ALL_TOTAL_PRICE"		property="allTotalPrice"/>
	</resultMap>
	
	<resultMap type="com.kh.project.admin.vo.BuyStatusVO" id="status">
		<id column="STATUS_NUM"				property="statusNum"/>
		<result column="STATUS_NAME"		property="statusName"/>
	</resultMap>
	
	<resultMap type="com.kh.project.admin.vo.SideMenuVO" id="sideMenu">
		<id column="SIDE_MENU_CODE" property="sideMenuCode"/>
		<result column="SIDE_MENU_NAME" property="sideMenuName"/>
		<result column="MENU_PASS" property="menuPass"/>
		<result column="MENU_CODE" property="menuCode"/>
	</resultMap>
	
	<resultMap type="com.kh.project.member.vo.MemberVO" id="member">
		<id column="ID" property="id"/>
		<result column="PW" property="pw"/>
		<result column="NAME" property="name"/>
		<result column="TELL" property="tell"/>
		<result column="POST_CODE" property="postCode"/>
		<result column="ROAD_ADDR" property="roadAddr"/>
		<result column="DETAIL_ADDR" property="detailAddr"/>
		<result column="GENDER" property="gender"/>
		<result column="EMAIL" property="email"/>
		<result column="BIRTHDAY" property="birthday"/>
		<result column="IS_ADMIN" property="isAdmin"/>
		<result column="JOIN_DATE" property="joinDate"/>
	</resultMap>
	
	
	
	<insert id="insertCategory">
		INSERT INTO CATEGORY (
			CATE_CODE
			, CATE_NAME
		) VALUES(
			(SELECT 'CATE_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(CATE_CODE, 6, 3))), 0) + 1, 3, '0') FROM CATEGORY)
			, #{cateName}
		)
	</insert> 
	<select id="selectCategoryList" resultMap="category">
		SELECT CATE_CODE
		, CATE_NAME
		FROM CATEGORY
		ORDER BY CATE_CODE
	</select>
	
	<delete id="deleteCategory">
		DELETE CATEGORY
		WHERE CATE_CODE = #{cateCode}
	</delete>
	
	<!-- 카테고리당 매출관리를 위한 상품정보 목록 -->
	<select id="selectSalesList" resultMap="view">
		SELECT RNUM, ITEM_CODE, CATE_CODE, ITEM_NAME, TOTAL_PRICE, BUY_CNT, BUY_DATE
		FROM(
			SELECT ROWNUM RNUM , ITEM_CODE, CATE_CODE, ITEM_NAME, TOTAL_PRICE, BUY_CNT, BUY_DATE
			FROM(
				SELECT ITEM_CODE
					, ITEM_NAME
					, CATE_CODE
					, TOTAL_PRICE
					, BUY_CNT
					, TO_CHAR(BUY_DATE, 'YYYY.MM.DD') AS BUY_DATE
				FROM SALES
				<if test="cateCode != null and !cateCode.equals('')">
				WHERE CATE_CODE = #{cateCode}
				</if>
				ORDER BY BUY_DATE
			)
		)
		WHERE RNUM BETWEEN #{startRow} and #{endRow}
	</select>
	
	
	<insert id="insertImgs">
		INSERT INTO ITEM_IMG(
			IMG_CODE
			, ORIGIN_IMG_NAME
			, ATTACHED_IMG_NAME
			, ITEM_CODE
			, IS_MAIN
		)
		<foreach collection="imgList" item="imgInfo" separator="UNION ALL">
			SELECT
				#{imgInfo.imgCode}
				, #{imgInfo.originImgName}
				, #{imgInfo.attachedImgName}
				, #{imgInfo.itemCode}
				, #{imgInfo.isMain}
			FROM DUAL
		</foreach>
	</insert>
	
	<select id="selectNextNumber" resultType="int">
		SELECT NVL(MAX(TO_NUMBER(SUBSTR(IMG_CODE, 5, 3)))+1, 1) AS IMG_CODE
		FROM ITEM_IMG
	</select>
	
	<select id="selectNextItemCode" resultType="String">
		SELECT 'ITEM_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(ITEM_CODE, 6, 3))), 0)+1, 3, '0') AS ITEM_CODE
		FROM ITEM
	</select>
	
	<insert id="insertItem">
		INSERT INTO ITEM(
			ITEM_CODE
			, ITEM_PRICE
			, ITEM_INTRO
			, ITEM_STOCK
			, ITEM_STATUS
			, ITEM_NAME
			, CATE_CODE
		) VALUES(
			#{itemCode}
			, #{itemPrice}
			, #{itemIntro}
			, #{itemStock}
			, #{itemStatus}
			, #{itemName}
			, #{cateCode}
		)
	</insert>
	
	<!-- 주문정보조회 -->
	<select id="selectOrderList" resultMap="order">
		SELECT RNUM , BUY_CODE, ITEM_NAME, TOTAL_PRICE, BUY_CNT, BUY_DATE, ID, PAYMENT_PLAN, BUY_STATUS, ROAD_ADDR, DETAIL_ADDR
		FROM (
			SELECT ROWNUM RNUM , BUY_CODE, ITEM_NAME, TOTAL_PRICE, BUY_CNT, BUY_DATE, ID, PAYMENT_PLAN, BUY_STATUS, ROAD_ADDR, DETAIL_ADDR
			FROM (
					SELECT BUY_CODE
					, ITEM_NAME
					, TOTAL_PRICE
					, BUY_CNT
					, TO_CHAR(BUY_DATE, 'YYYY-MM-DD') AS BUY_DATE
					, ID
					, PAYMENT_PLAN
					, BUY_STATUS
					, ROAD_ADDR
					, DETAIL_ADDR
					FROM ORDER_INFO
					WHERE 1 = 1
					<if test="startDate != null and !startDate.equals('') and endDate != null and !endDate.equals('')">
					AND TO_CHAR(BUY_DATE, 'YYYY-MM-DD') BETWEEN #{startDate} AND #{endDate}
					</if>
					<if test="serchStatus != null and !serchStatus.equals('') and !serchStatus.equals('전체')">
					AND BUY_STATUS = #{serchStatus}
					</if>
					ORDER BY BUY_DATE DESC 
				)
			)
		WHERE RNUM BETWEEN #{startRow} and #{endRow}
		 
	</select>
	
	<select id="getTotalRow" resultType="int">
		SELECT COUNT(BUY_CODE) FROM ORDER_INFO
		WHERE 1 = 1
		<if test="startDate != null and !startDate.equals('') and endDate != null and !endDate.equals('')">
		AND TO_CHAR(BUY_DATE, 'YYYY-MM-DD') BETWEEN #{startDate} AND #{endDate}  
		</if>
		<if test="serchStatus != null and !serchStatus.equals('') and !serchStatus.equals('전체')">
		AND BUY_STATUS = #{serchStatus}
		</if> 
	</select>
	
	<select id="selectStatus" resultMap="status">
		SELECT STATUS_NUM
		, STATUS_NAME
		FROM BUY_STATUS
	</select>
	
	<update id="updateStatus">
		UPDATE BUY_INFO
		SET BUY_STATUS = #{statusName}
		WHERE BUY_CODE = #{buyCode}
	</update>
	
	<select id="getTotalRowBySales" resultType="int">
		SELECT COUNT(ITEM_CODE) FROM SALES
	</select>
	
	<select id="getTotalRowBycateSales" resultType="int">
		SELECT COUNT(ITEM_CODE)
		FROM SALES
		WHERE CATE_CODE = #{cateCode}
	</select>
	
	<select id="getTotalRowByItem" resultType="int">
		SELECT COUNT(I.ITEM_CODE)
		FROM ITEM I , ITEM_IMG IMG
		WHERE I.ITEM_CODE = IMG.ITEM_CODE
		AND IS_MAIN = 'Y'
	</select>
	
	<select id="selectItem" resultMap="item">
		SELECT ITEM_CODE, ITEM_NAME, ITEM_PRICE, ITEM_STOCK, ITEM_STATUS, ATTACHED_IMG_NAME, RNUM
		FROM (
			SELECT ITEM_CODE, ITEM_NAME, ITEM_PRICE, ITEM_STOCK, ITEM_STATUS, ATTACHED_IMG_NAME, ROWNUM RNUM
			    FROM(
			        SELECT I.ITEM_CODE
			            , ITEM_NAME
			            , ITEM_PRICE
			            , ITEM_STOCK
			            , ITEM_STATUS
			            , ATTACHED_IMG_NAME
			        FROM ITEM I , ITEM_IMG IMG
			        WHERE I.ITEM_CODE = IMG.ITEM_CODE
			        AND IS_MAIN = 'Y')
			)
		WHERE RNUM BETWEEN #{startRow} and #{endRow}
	</select>
	
	<update id="updateItemStatus">
		UPDATE ITEM
		SET ITEM_STATUS = #{itemStatus}
			, ITEM_STOCK = #{itemStock}
		WHERE ITEM_CODE = #{itemCode}
	</update>
	
	<delete id="deleteItem">
		DELETE ITEM
		WHERE ITEM_CODE = #{itemCode}
	</delete>
	
	<select id="selectSideMenu" resultMap="sideMenu">
		SELECT SIDE_MENU_CODE, SIDE_MENU_NAME, SM.MENU_PASS, SM.MENU_CODE
		FROM MENU M , SIDE_MENU SM
		WHERE M.MENU_CODE = SM.MENU_CODE
		<if test="menuCode != null">
		AND SM.MENU_CODE = #{menuCode}
		</if>
		<if test="menuCode == null">
		AND M.MENU_CODE = 'MENU_001'
		</if>
	</select>
	
	<select id="selectMemberList" resultMap="member">
		SELECT ID
			, NAME
			, TO_CHAR(JOIN_DATE, 'YYYY-MM-DD') AS JOIN_DATE
		FROM MEMBER
	</select>
	
	<select id="selectMemberDetail" resultMap="member">
		SELECT ID
			, NAME
			, TELL
			, ROAD_ADDR
			, DETAIL_ADDR
			, GENDER
			, EMAIL
			, TO_CHAR(BIRTHDAY, 'YYYY-MM-DD') AS BIRTHDAY
			, TO_CHAR(JOIN_DATE, 'YYYY-MM-DD') AS JOIN_DATE
		FROM MEMBER
		WHERE ID = #{id}
	</select>
	
	<!-- 한달의 총 가격 -->
	<select id="allTotalPrice" resultType="int">
		SELECT NVL(SUM(TOTAL_PRICE), 0)
		FROM ORDER_INFO
		<if test="startDate != null and !startDate.equals('') and endDate != null and !endDate.equals('')">
		WHERE TO_CHAR(BUY_DATE, 'YYYY-MM-DD') BETWEEN #{startDate} AND #{endDate}  
		</if>
	</select>
	
	<select id="sisk" resultType="int">
		SELECT ITEM_STOCK
		FROM ITEM
		WHERE ITEM_CODE = #{itemCode}
	</select>
	
	
</mapper>













